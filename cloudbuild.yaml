steps:

  - id: "Enable Google IAM APIs"
    name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "services",
        "enable",
        "iam.googleapis.com",
        "--project",
        "$PROJECT_ID"
      ]

  - id: "Enable Google Cloud Resource Manager APIs"
    name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "services",
        "enable",
        "cloudresourcemanager.googleapis.com",
        "--project",
        "$PROJECT_ID"
      ]

  - id: "Enable Google CloudFunctions APIs"
    name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "services",
        "enable",
        "cloudfunctions.googleapis.com",
        "--project",
        "$PROJECT_ID"
      ]

  - id: "Enable App Engine Admin API"
    name: "gcr.io/cloud-builders/gcloud"
    args:
        [
          "services",
          "enable",
          "appengine.googleapis.com",
          "--project",
          "$PROJECT_ID"
        ]

  - id: "Create App Engine App"
    name: gcr.io/cloud-builders/gcloud
    entrypoint: /bin/bash
    args:
     - -c
     - |
       gcloud app create --region=europe-west || echo App engine already exist
  
  - id: "Instantiate Firestore"
    name: gcr.io/cloud-builders/gcloud
    entrypoint: /bin/bash
    args:
     - -c
     - |
       gcloud components install alpha
       gcloud alpha firestore databases create --region=europe-west
       echo Firestore created

  - id: "Create Balance PubSub Topic"
    name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "pubsub",
        "topics",
        "create",
        "${_BALANCE_TOPIC_NAME}",
      ]

  - id: "Create Transaction PubSub Topic"
    name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "pubsub",
        "topics",
        "create",
        "${_TRANSACTION_TOPIC_NAME}",
      ]

substitutions:
    _BALANCE_TOPIC_NAME: balance
    _TRANSACTION_TOPIC_NAME: transactions
